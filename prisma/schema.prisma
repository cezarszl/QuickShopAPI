// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String?
  name       String
  googleId   String?
  facebookId String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  products   Product[]
  cartItems  CartItem[]
  orders     Order[]

}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  imageUrl    String
  price       Float
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  owner       User?      @relation(fields: [ownerId], references: [id])
  ownerId     Int?
  cartItems    CartItem[]
  brand String @default("Unknown Brand")
  color String  @default("Unknows Color")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int      @default(1)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          Int        @id @default(autoincrement())
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  items       Json       
  totalAmount Float
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}